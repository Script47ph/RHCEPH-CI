name: Github Hosted
on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
jobs:
  Prepare:
    runs-on: ubuntu-latest
    env:
      ETH0_NAME: ${{ vars.ETH0_NAME }}
      ETH0_BR: ${{ vars.ETH0_BR }}
      ETH0_ADDRESSES: ${{ vars.ETH0_ADDRESSES }}
      ETH1_NAME: ${{ vars.ETH1_NAME }}
      ETH1_BR: ${{ vars.ETH1_BR }}
      ETH1_ADDRESSES: ${{ vars.ETH1_ADDRESSES }}
      ETH2_NAME: ${{ vars.ETH2_NAME }}
      ETH2_BR: ${{ vars.ETH2_BR }}
      ETH2_ADDRESSES: ${{ vars.ETH2_ADDRESSES }}
      NETWORK_MODE: ${{ vars.NETWORK_MODE }}
    steps:
      - uses: actions/checkout@v4
    #   - name: Create Temp Directory
    #     run: |
    #           # if [ -d $TMPDIR ]; then
    #           #   sudo rm -rf $TMPDIR
    #           # fi
    #           mkdir -p $TMPDIR
      - name: Generate Libvirt Network
        run: |
              source scripts/generate-network.sh
              generate_net
            #   cat cluster-network.tf
    #   - name: Validate Template
    #     run:  |
    #             tofu init
    #             tofu validate
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: Libvirt_Network_Template
      #     path: ${{ vars.TMPDIR }}/cluster-network.tf
      #     overwrite: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
#   Deploy:
#     needs: Prepare
#     runs-on: self-hosted
#     steps:
#       - name: executing remote ssh commands using ssh key
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.LAB7_HOST }}
#           username: ${{ secrets.LAB7_USER }}
#           key: ${{ secrets.LAB7_KEY }}
#           script: whoami
      # - uses: actions/download-artifact@v4
      #   with:
      #     name: my-artifact
      #     path: your/destination/dir
      # - name: Display structure of downloaded files
      #   run: ls -R ${{ vars.TMPDIR }}
      # - name: Check Libvirt Network in Cluster
      #   run: |
      #         if [[ -n $(sudo virsh net-list | grep '$ETH0_NAME\|$ETH1_NAME\|$ETH2_NAME') ]]; then 
      #             echo "Libvirt Network Already Exists"
      #             sudo virsh net-list | grep '$ETH0_NAME\|$ETH1_NAME\|$ETH2_NAME'
      #         else
      #             echo "Applying Livirt Network.."
      #             # sudo virsh net-list | grep '$ETH0_NAME\|$ETH1_NAME\|$ETH2_NAME'
      #         fi
      # - name: Check User Info
      #   run: |
      #         id
      #         pwd
      # - name: Checkout to root
      #   run: sudo su
  # Setup:
  #   needs: Prepare
  #   environment:
  #     name: Manual
  #   runs-on: self-hosted
  #   steps:
  #     - uses: actions/checkout@main
  #     - name: Check RAM Info
  #       run: free -h

  
